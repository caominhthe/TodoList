// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given Todo Screen should render correctly with todo items 1`] = `
<View
  onLayout={[Function]}
  pointerEvents="box-none"
  style={
    [
      {
        "backgroundColor": "#FFFFFF",
        "flex": 1,
      },
      {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "#FFFFFF",
          "flex": 1,
        },
        {
          "marginBottom": 0,
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      CellRendererComponent={[Function]}
      ListEmptyComponent={[Function]}
      ListHeaderComponent={[Function]}
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      contentContainerStyle={
        {
          "flexGrow": 1,
          "paddingBottom": 24,
          "paddingTop": 12,
        }
      }
      data={
        [
          {
            "createdAt": "1690031534767",
            "id": "id",
            "isDone": false,
            "title": "test",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              {
                "paddingHorizontal": 24,
                "paddingVertical": 8,
              }
            }
          >
            <Text>
              Today tasks: 0 / 1 
            </Text>
          </View>
        </View>
        <View
          animatedStyle={
            {
              "value": {},
            }
          }
          collapsable={false}
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": undefined,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": [Function],
            }
          }
          onLayout={[Function]}
          style={{}}
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              animatedStyle={
                {
                  "value": {},
                }
              }
              collapsable={false}
              entering={
                SlideInDown {
                  "build": [Function],
                  "callbackV": undefined,
                  "dampingV": undefined,
                  "delayV": undefined,
                  "durationV": 200,
                  "easingV": undefined,
                  "initialValues": undefined,
                  "massV": undefined,
                  "overshootClampingV": undefined,
                  "randomizeDelay": false,
                  "restDisplacementThresholdV": undefined,
                  "restSpeedThresholdV": undefined,
                  "rotateV": undefined,
                  "stiffnessV": undefined,
                  "type": undefined,
                }
              }
              exiting={[Function]}
              style={
                {
                  "alignItems": "center",
                  "borderColor": "grey",
                  "borderRadius": 8,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 65,
                  "marginHorizontal": 24,
                  "marginTop": 8,
                  "overflow": "hidden",
                  "paddingHorizontal": 24,
                  "paddingTop": 8,
                  "paddingVertical": 8,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderColor": "#4b7bad",
                        "borderRadius": 4,
                        "borderWidth": 2,
                        "height": 20,
                        "justifyContent": "center",
                        "width": 20,
                      },
                      null,
                    ]
                  }
                />
              </View>
              <View
                style={
                  {
                    "flex": 1,
                  }
                }
                testID="todo-item"
              >
                <Text
                  style={
                    [
                      {
                        "flexWrap": "wrap",
                        "fontSize": 16,
                        "fontWeight": "bold",
                        "paddingHorizontal": 12,
                      },
                      {},
                    ]
                  }
                  testID="item-title"
                >
                  test
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
                testID="delete-button"
              >
                <Text
                  style={
                    {
                      "color": "#F44336",
                      "fontSize": 16,
                    }
                  }
                >
                  Delete
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        {
          "borderColor": "#DADADA",
          "borderTopWidth": 1,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "paddingBottom": 4,
            "paddingHorizontal": 12,
            "width": 750,
          }
        }
      >
        <TextInput
          multiline={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          placeholder="Add new todo here"
          style={
            {
              "borderColor": "#4b7bad",
              "borderRadius": 8,
              "borderWidth": 1,
              "flex": 1,
              "fontSize": 20,
              "lineHeight": 30,
              "marginRight": 8,
              "paddingHorizontal": 8,
              "paddingVertical": 8,
            }
          }
          value=""
        />
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="submit-button"
        >
          <Text
            style={
              {
                "backgroundColor": "#e6eff7",
                "borderRadius": 8,
                "fontSize": 16,
                "fontWeight": "bold",
                "overflow": "hidden",
                "padding": 12,
              }
            }
          >
            Edit
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
